{
  "date": {
    "date": "yyyy-mm-dd"
  },
  "emailManagement": {
    "emailManagement": "Email Management",
    "manageForm": "Manage Form",
    "submissionConfirmation": "Submission Confirmation"
  },
  "emailTemplate": {
    "body": "Body",
    "save": "Save",
    "saveEmailTemplateConsoleErrMsg": "Error updating email template for form {formId}: {error}",
    "saveEmailTemplateErrMsg": "An error occurred while attempting to update the email template.",
    "subject": "Subject",
    "title": "Title",
    "validBodyRequired": "Please enter a Body for the email",
    "validSubjectRequired": "Please enter a Subject line for the email",
    "validTitleRequired": "Please enter a Title for the email"
  },
  "formsTable": {
    "myForms": "My Forms",
    "createNewForm": "Create a New Form",
    "search": "Search",
    "manage": "Manage",
    "submissions": "Submissions",
    "formTitle": "Form Title",
    "viewForm": "View Form",
    "description": "description",
    "Description": "Description:",
    "action": "Actions",
    "loadingText": "Loading... Please wait"
  },
  "manageLayout": {
    "manageForm": "Manage Form"
  },
  "shareForm": {
    "shareForm": "Share Form",
    "shareLink": "Share Link",
    "copyQRCode": "Copy the link below or download the QR code.",
    "warningMessage": "There is no published version of the form at this time. The link below will not be reachable until a version is published.",
    "openThisForm": "Open this form",
    "downloadQRCode": "Download QR Code",
    "close": "Close",
    "copyURLToClipboard": "Copy URL to clipboard"
  },
  "manageFormActions": {
    "emailManagement": "Email Management",
    "viewSubmissions": "View Submissions",
    "teamManagement": "Team Management",
    "deleteForm": "Delete Form",
    "confirmDeletion": "Confirm Deletion",
    "deleteMessageA": "Are you sure you wish to delete",
    "deleteMessageB": "This form will no longer be accessible.",
    "delete": "Delete"
  },
  "manageForm": {
    "formSettings": "Form Settings",
    "apiKey": "Api Key",
    "updated": "Updated",
    "created": "Created",
    "formDesignHistory": "Form Design History",
    "totalVersions": "Total Versions",
    "status": "Status",
    "update": "Update",
    "cancel": "Cancel",
    "eventSubscription": "Event Subscription"
  },
  "formSettings": {
    "pressToAddMultiEmail": "Press <kbd>enter</kbd> or <kbd>,</kbd> or <kbd>space</kbd> to add multiple email addresses",
    "allowMultiDraft": "Allow <strong> multiple draft</strong> upload",
    "formTitle": "Form Title",
    "formDescription": "Form Description",
    "formAccess": "Form Access",
    "info": "If you will be using this form to gather information from the general public on topics that are of general interest to the public, you are required to contact the GCPE so that your engagement can be listed on",
    "important": "IMPORTANT",
    "idimNotifyA": "You must notify the Identity Information Management (IDIM) team by email",
    "idimNotifyB": "your intent to leverage BCeID to verify the identities of your form submitters.",
    "referenceGuideA": "Please reference our",
    "referenceGuideB": "user guide",
    "referenceGuideC": "for more details",
    "specificTeamMembers": "Specific Team Members",
    "formFunctionality": "Form Functionality",
    "formSubmissinScheduleMsg": "The Form Submissions Schedule will be available in the Form Settings after the form is published.",
    "formSubmissionsSchedule": "Form Submissions Schedule",
    "experimental": "Experimental",
    "learnMore": "Learn more",
    "afterSubmission": "After Submission",
    "submissionConfirmation": "Show the submission confirmation details",
    "theConfirmationID": "the Confirmation ID",
    "infoB": "the option for the user to email themselves a submission confirmation",
    "loginRequired": "Log-in Required",
    "canSaveAndEditDraftLabel": "Submitters can <strong>Save and Edit Drafts</strong>",
    "canUpdateStatusAsReviewer": "Reviewers can <strong>Update the Status</strong> of this form (i.e. Submitted, Assigned, Completed)",
    "submitterCanCopyExistingSubmissn": "Submitters can<strong> Copy an existing submission</strong>",
    "submissionConfirmationToolTip": "Selecting this option controls what the submitting user of this form will see on successful submission. <br /> If checked, it will display",
    "emailNotificatnToTeam": "Send my team a notification email",
    "emailNotificatnToTeamToolTip": "Send a notification to your specified email address when any user submits this form",
    "notificationEmailAddrs": "Notification Email Addresses",
    "addMoreValidEmailAddrs": "Add one or more valid email addresses",
    "formScheduleSettings": "Form Schedule Settings",
    "opensubmissions": "Open submissions",
    "submissionsDeadline": "How long do you want to receive submissions?",
    "keepSubmissnOpenTilUnplished": "Keep open until manually unpublished",
    "submissionsClosingDate": "Schedule a closing date",
    "submissionPeriod": "Set up submission period",
    "closeSubmissions": "Close submissions",
    "keepOpenFor": "Keep open for",
    "period": "Period",
    "allowLateSubmissions": "Allow late submissions",
    "allowLateSubmissionsInfoTip": "If checked, submitters will be able to submit data after the closing date.",
    "afterCloseDateFor": "After close date for",
    "repeatPeriod": "Repeat period",
    "every": "Every",
    "repeatUntil": "Repeat until",
    "summary": "Summary",
    "submissionsOpenDateRange": "This form will be open for submissions from",
    "to": "to",
    "scheduleRepetition": "The schedule will repeat every",
    "allowLateSubmissnInterval": "allowing late submissions for",
    "until": "until",
    "datesOfSubmissnInfo": "As per the settings these are the available dates of submissions:",
    "formOpenInterval": "This form will be open for submissions from",
    "allowDateSubmissionDate": "with allowing late submission until",
    "customClosingMessage": "Set custom closing message",
    "customClosingMessageToolTip": "Allow you to add a customized message for your users when they visit a closed form.",
    "closingMessage": "Closing Message",
    "sendReminderEmail": "SEND Reminder email",
    "autoReminderNotificatn": "Enable automatic reminder notification",
    "autoReminderNotificatnToolTip": "Send reminder email/s with the form link during the submission period.",
    "selectLoginType": "Please select 1 log-in type",
    "formDescriptnMaxChars": "Form Description must be 255 characters or less",
    "formTitlemaxChars": "Form Title must be 255 characters or less",
    "formTitleReq": "Form Title is required",
    "atLeastOneEmailReq": "Please enter at least 1 email address",
    "validEmailRequired": "Please enter all valid email addresses",
    "fieldRequired": "This field is required.",
    "correctDateFormat": "Date must be in correct format. ie. yyyy-mm-dd",
    "dateDiffMsg": "Close Submission date should be greater than open submission date.",
    "valueMustBeNumber": "Value must be a number. ie. 1,2,3,5,99",
    "selectAnOptions": "Please select at least 1 option",
    "validInterval": "This should be a valid interval.",
    "fieldRequiredAndInterval": "This field is required & should be an interval.",
    "dateGrtOpenSubmissnDate": "Repeat untill date should be greater then open submission date",
    "public": "Public (anonymous)",
    "allowEventSubscription": "Allow event subscription",
    "eventSubscription": "Event Subscription",
    "validEndpointRequired": "Please enter a valid endpoint starting with https://",
    "validBearerTokenRequired": "Enter a valid bearer token example: 89abddfb-2cff-4fda-83e6-13221f0c3d4f"
  },
  "subscribeEvent": {
    "eventType": "Event Type",
    "endpointUrl": "Endpoint URL",
    "eventSubmission": "Submission",
    "eventAssignment": "Assignment",
    "eventStatusChange": "Status Change",
    "endpointToken": "Endpoint Token",
    "urlPlaceholder": "https://endpoint.gov.bc.ca/api/v1/",
    "save": "Save",
    "text": "text",
    "password": "password",
    "hideSecret": "Hide Secret",
    "showSecret": "Show Secret",
    "key": "Key",
    "saveSettingsErrMsg": "An error occurred while attempting to update the settings for this form.",
    "updateSettingsConsoleErrMsg": "Error updating settings for form {formId}: {error}"
  },
  "apiKey": {
    "disclaimer": "Disclaimer",
    "infoA": "Ensure that your API key secret is stored in a secure location (i.e. key vault).",
    "infoB": "Your API key grants unrestricted access to your form. Do not give out your API key to anyone.",
    "infoC": "The API key should ONLY be used for automated system interactions. Do not use your API key for user based access",
    "deleteKey": "Delete Key",
    "apiKey": "api key",
    "hideSecret": "Hide Secret",
    "showSecret": "Show Secret",
    "sCTC": "Secret copied to clipboard",
    "cSTC": "Copy secret to clipboard",
    "key": "Key",
    "confirmDeletion": "Confirm Deletion",
    "deleteMsg": "Are you sure you wish to delete your API Key?",
    "delete": "Delete",
    "confirmKeyGen": "Confirm Key Generation",
    "createAPIKey": "Create an API Key for this form?<br /> Ensure you follow the Disclaimer on this page.",
    "regenerateAPIKey": "Regenerate the API Key? <br /> <strong>Continuing will delete your current API Key access</strong>.",
    "formOwnerKeyAcess": "You must be the <strong>Form Owner</strong> to manage API Keys.",
    "regenerate": "Regenerate",
    "generate": "Generate",
    "secret": "Secret"
  },
  "manageVersions": {
    "important": "IMPORTANT!",
    "infoA": "If there are no published versions, users are unable to access this form until there is a published version assigned. Once a version is published, that version is no longer editable. You must create a new version based on one of the previous form versions to continue editing.",
    "infoB": "Note: Only one version can be published.",
    "version": "Version",
    "draft": "Draft",
    "clickToPreview": "Click to preview",
    "editVersion": "Edit Version",
    "exportDesign": "Export Design",
    "infoC": "Please publish or delete your latest draft version before starting a new version.",
    "deleteVersion": "Delete Version",
    "draftAlreadyExists": "Draft already exists",
    "infoD": "Please edit, publish or delete the existing draft before starting a new draft.",
    "publishVersion": "Publish Version",
    "unpublishVersion": "Unpublish Version",
    "infoE": "Unpublishing this form will take the form out of circulation until a version is published again.",
    "confirmDeletion": "Confirm Deletion",
    "infoF": "Are you sure you wish to delete this Version?",
    "delete": "Delete",
    "status": "Status",
    "dateCreated": "Date Created",
    "createdBy": "Created By",
    "actions": "Actions",
    "published": "Published",
    "unpublished": "Unpublished",
    "useVersionInfo": "Use version {version} as the base for a new version",
    "publishingVersionInfo": "This will make Version {version} of your form live."
  },
  "addOwner": {
    "infoA": "This should only be done in the event that the current form owner is no longer active or is out of contact in a priority event. Otherwise have the current Owner or a Team Administrator for the form do this themselves.",
    "hint": "To find the User ID needed you can go to the 'USERS' tab in the Admin portal and search for them.",
    "addowner": "Add owner",
    "label": "User ID (guid)"
  },
  "adminFormsTable": {
    "showDeletedForms": "Show deleted forms",
    "search": "Search",
    "loadingText": "loading-text",
    "noDataText": "There are no forms in your system",
    "admin": "Admin",
    "launch": "Launch",
    "formTitle": "Form Title",
    "created": "Created",
    "deleted": "Deleted",
    "actions": "Actions",
    "delete": "Delete"
  },
  "administerForm": {
    "deleted": "DELETED",
    "restoreForm": "Restore this form",
    "formDetails": "Form Details",
    "apiKeyDetails": "API Key Details",
    "deleteApiKey": "Delete API Key",
    "formUsers": "Form Users",
    "formVersions": "Form Versions",
    "assignANewOwner": "Assign A New Owner",
    "restoring": "Restoring",
    "restore": "Restore",
    "toActiveState": "to active state",
    "confirmDeletion": "Confirm Deletion",
    "confirmDeletionMsg": "Are you sure you want to delete this API Key?",
    "delete": "Delete",
    "confirmRestore": "Confirm Restore"
  },
  "administerUser": {
    "userDetails": "User Details",
    "openSSOConsole": "Open SSO console"
  },
  "adminPage": {
    "forms": "Forms",
    "users": "Users",
    "developer": "Developer",
    "infoLinks": "Info Links",
    "metrics": "Metrics"
  },
  "adminUsersTable": {
    "search": "Search",
    "loadingText": "Loading... Please wait",
    "admin": "Admin",
    "fullName": "Full Name",
    "userID": "User ID",
    "created": "Created",
    "actions": "Actions"
  },
  "adminVersions": {
    "exportDesign": "Export Design",
    "versions": "Versions",
    "status": "Status",
    "created": "Created",
    "lastUpdated": "Last Updated",
    "actions": "Actions",
    "published": "Published",
    "unpublished": "Unpublished",
    "version": "Version {versionNo}",
    "notificationMsg": "An error occurred while loading the form design."
  },
  "developer": {
    "user": "User",
    "name": "Name",
    "userName": "UserName",
    "JWTContents": "JWT Contents",
    "JWTContentsSBTxt": "JWT Contents copied to clipboard",
    "JWTContentsTTTxt": "Copy JWT Contents to clipboard",
    "JWTToken": "JWT Token",
    "JWTTokenSBTxt": "JWT Token copied to clipboard",
    "JWTTokenTTTxt": "Copy JWT Token to clipboard",
    "chefsAPI": "CHEFS API",
    "RBACSBTxt": "RBAC Response copied to clipboard",
    "RBACTTTxt": "Copy RBAC Response to clipboard",
    "notificationMsg": "Failed to get user from RBAC, see console",
    "notificationConsErr": "Error getting User from RBAC"
  },
  "baseAuthButton": {
    "logout": "Logout",
    "login": "Login"
  },
  "baseDialog": {
    "defaultText": "default text",
    "ok": "OK",
    "continue": "Continue",
    "cancel": "Cancel",
    "custom": "Custom"
  },
  "baseSecure": {
    "about": "About",
    "loginInfo": "You must be logged in to use this feature.",
    "login": "Login",
    "401NotAuthorized": "401: not authorized. :(",
    "401ErrorMsg": "Your account is not set up correctly.<br />Please contact",
    "403Forbidden": "403: Forbidden. :(",
    "403ErrorMsg": "This page requires {idp} authentication.",
    "401UnAuthorized": "401: Unauthorized. :(",
    "401UnAuthorizedErrMsg": "You do not have permission to access this page."
  },
  "formDesigner": {
    "formDesign": "Form Design",
    "exportDesign": "Export Design",
    "importDesign": "Import Design",
    "important": "IMPORTANT",
    "formDesignInfoA": "Use the <strong>SAVE DESIGN</strong> button when you are done building this form.",
    "formDesignInfoB": "The <strong>SUBMIT</strong> button is provided for your user to submit this form and will be activated after it is saved.",
    "formLoadErrMsg": "An error occurred while loading the form design.",
    "formLoadConsoleErrMsg": "Error loading form {formId} schema (version: {versionId} draft: {draftId}): {error}",
    "formSchemaImportErrMsg": "An error occurred while importing the form schema.",
    "formSchemaImportConsoleErrMsg": "Error importing form schema : {error}",
    "formDesignSaveErrMsg": "An error occurred while attempting to save this form design. If you need to refresh or leave to try again later, you can Export the existing design on the page to save for later.",
    "formDesignSaveConsoleErrMsg": "Error updating or creating form (FormID: {formId}, versionId: {versionId}, draftId: {draftId}) Error: {error}",
    "collapse": "Collapse",
    "actions": "Actions",
    "version": "Version",
    "save": "Save",
    "saving": "Saving",
    "notSaved": "Not Saved",
    "fieldnameError": "You CAN NOT use 'form' keyword as {label} fieldname"
  },
  "formViewerMultiUpload": {
    "important": "IMPORTANT",
    "uploadSucessMsg": "To ensure successful uploading of multiple drafts, please download and utilize the provided template.",
    "confirmDownload": "Do you want to download it?",
    "jsonFileUpload": "Select JSON file to upload",
    "dragNDrop": "or drag and drop it here",
    "chooseAFile": "Choose a file",
    "downloadDraftSubmns": "Please download the draft submission report and ensure that the data is entered correctly.",
    "downloadReport": "Download report",
    "doYouWantToDownload": "Do you want to download it?",
    "uploadNewFile": "Upload new file",
    "uploadMultipleFileErr": "Sorry, you can upload only one file",
    "dragMultipleFileErr": "Sorry, you can drag only one file",
    "fileFormatErr": "Sorry, we only accept json files",
    "fileSizeErr": "Max file size allowed is 5MB",
    "parseJsonErr": "We can not parse json data from the file",
    "jsonObjNotArray": "Wrong json file format",
    "jsonObjNotArrayConsErr": "An unexpected error occurred.",
    "jsonArrayEmpty": "This json file is empty.",
    "errorWhileValidate": "There is something wrong with this file",
    "errWhileCheckValidity": "There is something wrong with this file",
    "errAfterValidate": "Some errors found, see below for more information.",
    "fileIsEmpty": "this file is empty.",
    "download": "Download"
  },
  "formDisclaimer": {
    "disclaimerAndStatement": "Disclaimer and statement of responsibility for Form Designers:",
    "privacyLaw": "It is your responsibility to comply with Privacy laws governing the collection, use and disclosure of personally identifiable information.",
    "disclosure": "Access to this form designer tool does not inherently grant permission to collect, use or disclose any personally identifiable information.",
    "consent": "It is your responsibility to obtain consent to collect information as required by law.",
    "formIntention": "Before publishing or distributing your form you are required to discuss the intention of the form with your",
    "privacyOfficer": "Ministry Privacy Officer",
    "assement": "and to complete assessments as required."
  },
  "requestReceipt": {
    "emailPriority": "Email Priority",
    "emailReceipt": "Email a receipt of this submission",
    "high": "High",
    "low": "Low",
    "normal": "Normal",
    "send": "SEND",
    "sendToEmailAddress": "Send to Email Address",
    "emailSent": "An email has been sent to {to}.",
    "sendingEmailErrMsg": "An error occurred while attempting to send your email.",
    "sendingEmailConsErrMsg": "Email confirmation to {to} failed: {error}",
    "emailRequired": "Email is required"
  },
  "submissionsTable": {
    "noMatchingRecordText": "No matching records found",
    "submissions": "Submissions",
    "submissionsTable": "SubmissionsTable",
    "selectColumns": "Select Columns",
    "manageForm": "Manage Form",
    "submissionsToFiles": "Export Submissions to Files",
    "showDeletedSubmissions": "Show deleted submissions",
    "showMySubmissions": "Show my submissions",
    "search": "Search",
    "loadingText": "Loading... Please wait",
    "noDataText": "There are no submissions for this form",
    "delSelectedSubmissions": "Delete selected submissions",
    "resSelectedSubmissions": "Restore selected submissions",
    "yes": "YES",
    "no": "NO",
    "viewSubmission": "View Submission",
    "deleteSubmission": "Delete Submission",
    "restore": "Restore",
    "confirmDeletion": "Confirm Deletion",
    "delete": "Delete",
    "confirmRestoration": "Confirm Restoration",
    "searchSubmissionFields": "Search submission fields",
    "save": "Save",
    "searchTitle": "Search and select columns to show under your dashboard",
    "status": "Status",
    "submitter": "Submitter",
    "submissionDate": "Submission Date",
    "event": "event",
    "view": "View",
    "lateSubmission": "Late Submission",
    "confirmationID": "Confirmation ID",
    "multiDelWarning": "Are you sure you wish to delete selected submissions?",
    "singleDelWarning": "Are you sure you wish to delete this submission?",
    "multiRestoreWarning": "Are you sure you wish to restore these submissions?",
    "singleRestoreWarning": "Are you sure you wish to restore this submission?"
  },
  "auditHistory": {
    "viewEditHistory": "View Edit History",
    "editHistory": "Edit History",
    "auditLogMsg": "This is an audit log of who has made changes to this submission after the original submission.",
    "loadingText": "Loading... Please wait",
    "close": "Close",
    "userName": "User Name",
    "date": "Date",
    "errorMsg": "An error occurred while trying to fetch history.",
    "consoleErrMsg": "Error getting audit history for"
  },
  "deleteSubmission": {
    "deleteThis": "Delete This",
    "draft": "Draft",
    "submission": "Submission",
    "confirmDeletion": "Confirm Deletion",
    "deleteWarning": "Are you sure you wish to delete this",
    "drafts": "draft",
    "formSubmission": "form submission",
    "delete": "Delete"
  },
  "manageSubmissionUsers": {
    "manageTeamMembers": "Manage Team Members",
    "add": "Add",
    "draftFormInvite": "You can only invite and manage team members while this form is a draft",
    "submissionTeamMembers": "Team members for this submission",
    "actions": "Actions",
    "close": "Close",
    "remove": "Remove",
    "userNotFoundErrMsg": "Can't find someone? They may not have logged into CHEFS.<br /> Kindly send them a link to CHEFS and ask them to log in.",
    "name": "Name",
    "username": "Username",
    "email": "Email",
    "removeUserWarningMsg1": "Are you sure you wish to remove",
    "removeUserWarningMsg2": "They will no longer have permissions for this submission.",
    "userExistInListMsg": "User {username} is already in the list of team members.",
    "getSubmissionUsersErr": "An error occurred while trying to fetch users for this submission.",
    "getSubmissionUsersConsoleErr": "Error getting users for {submissionId} : {error}",
    "sentInviteEmailTo": "Sent invite email to",
    "sentUninvitedEmailTo": "Sent uninvited email to",
    "updateUserErrMsg": "An error occurred while trying to update users for this submission.",
    "updateUserConsoleErrMsg": "Error setting user permissions. Sub: {submissionId} User: {userId} Error: {error}",
    "searchInputLength": "Search input for BCeID username/email must be greater than 6 characters.",
    "exactBCEIDSearch": "Email searches for BCeID must be exact.",
    "getUsersErrMsg": "Error getting users: {error}",
    "exactEmailOrUsername": "Enter an exact email or username.",
    "requiredFiled": "Enter a name, email, or username"
  },
  "mySubmissionsActions": {
    "viewThisSubmission": "View This Submission",
    "copyThisSubmission": "Copy This Submission",
    "editThisDraft": "Edit This Draft"
  },
  "mySubmissionsTable": {
    "noMatchingRecordText": "No matching records found",
    "previousSubmissions": "Previous Submissions",
    "selectColumns": "Select Columns",
    "createNewSubmission": "Create a New Submission",
    "search": "Search",
    "loadingText": "Loading... Please wait",
    "noDataText": "You have no submissions",
    "searchSubmissionFields": "Search submission fields",
    "save": "Save",
    "filterTitle": "Search and select columns to show under your dashboard",
    "confirmationId": "Confirmation Id",
    "actions": "actions",
    "createdBy": "Created By",
    "statusUpdatedBy": "Status Updated By",
    "status": "Status",
    "submissionDate": "Submission Date",
    "draftUpdatedBy": "Draft Updated By",
    "draftLastEdited": "Draft Last Edited",
    "createLateSubmissn": "Create late submission",
    "formLoading": "Please wait while the form is loading !!!",
    "pleaseConfirm": "Please Confirm",
    "wantToSaveDraft": "Do you want to save the draft?",
    "yes": "Yes",
    "no": "No",
    "multiDraftUploadSuccess": "Your multiple draft upload has been successful!",
    "failedResSubmissn": "Failed response from submission endpoint. Response code: {status}",
    "errSubmittingForm": "An error occurred submitting this form",
    "errorSavingFile": "Error saving files. Filename: {fileName}. Error: {error}",
    "submittingDraftErrMsg": "An error occurred while saving a draft",
    "submittingDraftConsErrMsg": "Error saving draft. SubmissionId: {submissionId}. Error: {error}"
  },
  "notesPanel": {
    "addNewNote": "Add New Note",
    "cancel": "Cancel",
    "addNote": "ADD NOTE",
    "noResponseErr": "No response data from API while submitting form",
    "errorMesg": "An error occurred while trying to add the note.",
    "consoleErrMsg": "Error adding note:",
    "fetchErrMsg": "An error occurred while trying to fetch notes for this submission.",
    "fetchConsoleErrMsg": "Error adding note:",
    "notes": "Notes",
    "note": "Note",
    "maxChars": "Max 4000 characters"
  },
  "statusPanel": {
    "currentStatus": "Current Status:",
    "assignedTo": "Assigned To:",
    "assignOrUpdateStatus": "Assign or Update Status",
    "display": "display",
    "statusIsRequired": "Status is required",
    "assignTo": "Assign To",
    "noDataText": "No Form Reviewers found with search. Add Form Reviewers on the Manage page.",
    "assigneeIsRequired": "Assignee is required",
    "assignToMe": "ASSIGN TO ME",
    "recipientEmail": "Recipient Email",
    "attachCommentToEmail": "Attach Comment to Email",
    "emailComment": "Email Comment",
    "maxChars": "Max 4000 characters",
    "viewHistory": "VIEW HISTORY",
    "statusHistory": "Status History",
    "close": "CLOSE",
    "addNoteNoReponserErr": "No response data from API while submitting note for status update",
    "addNoteConsoleErrMsg": "Error updating status: {error}",
    "addNoteErrMsg": "An error occurred while trying to update the status",
    "updtSubmissionsStatusErr": "No response data from API while submitting status update form",
    "noStatus": "No Status",
    "noStatusesFound": "No statuses found",
    "statusCodesErr": "error finding status codes",
    "notifyErrorCode": "Error occurred fetching status for this submission.",
    "notifyConsoleErrorCode": "Error getting statuses:",
    "fetchSubmissionUsersErr": "An error occurred while trying to fetch recipient emails for this submission.",
    "fetchSubmissionUsersConsErr": "Error getting recipient emails for",
    "assignSubmissnToFormReviewer": "Submissions can be assigned to Form Reviewers. <br />To add more team members as Form Reviewers, go to the Manage page for this form.",
    "update": "UPDATE",
    "revise": "REVISE",
    "complete": "COMPLETE",
    "assign": "ASSIGN"
  },
  "statusTable": {
    "loadingText": "Loading... Please wait",
    "status": "Status",
    "dateStatusChanged": "Date Status Changed",
    "assignee": "Assignee",
    "updatedBy": "Updated By",
    "getSubmissionStatusErr": "An error occurred while trying to fetch statuses.",
    "getSubmissionStatusConsErr": "Error adding note:"
  },
  "exportSubmissions": {
    "exportSubmissionsToFile": "Export Submissions to File",
    "viewSubmissions": "View Submissions",
    "fileType": "File Type",
    "json": "JSON",
    "csv": "CSV",
    "formVersion": "Form Version",
    "versionIsRequired": "Version is required.",
    "dataFields": "Data Fields",
    "searchFields": "Search Fields",
    "selectedForExports": "selected for exports",
    "submissionDate": "Submission Date",
    "all": "All",
    "selectDateRange": "Select Date range",
    "SelectdateRange": "Select date range",
    "from": "From",
    "to": "To",
    "CSVFormat": "CSV Format",
    "multiRowPerSubmissionA": "1 - Multiple rows per submission with indentation spaces",
    "multiRowPerSubmissionB": "2 - Multiple rows per submission",
    "singleRowPerSubmission": "3 - Single row per submission",
    "unformatted": "4 - Unformatted",
    "fileNameAndType": "File Name and Type",
    "export": "Export",
    "noResponseDataErr": "No data in response from exportSubmissions call",
    "apiCallErrorMsg": "An error occurred while attempting to export submissions for this form.",
    "apiCallConsErrorMsg": "Error export submissions for",
    "selectAllFields": "Select all fields",
    "emailSentMsg": "An email will be sent to {email} containing a link to download your data when it is ready",
    "exportInProgress": "Export in progress",
    "of": "of"
  },
  "printOptions": {
    "submitButtonTxt": "Submit to CDOGS and Download",
    "templatePrint": "Template Print",
    "uploadTemplateFile": "Upload template file",
    "downloadOptions": "Download Options",
    "print": "Print",
    "browserPrint": "Browser Print",
    "pageFromBrowser": "the page from your browser",
    "uploadA": "Upload a",
    "uploadB": "to have a structured version",
    "docGrnSucess": "Document generated successfully",
    "failedDocGenErrMsg": "Failed to generate Document",
    "failedDocGenConsErrMsg": "Error submitting template: {error}",
    "cDogsTemplate": "CDOGS template"
  },
  "proactiveHelpDialog": {
    "componentInfoLink": "Component Information Link",
    "learnMoreLinkTxt": "Learn More Link field cannot be empty.",
    "largeImgTxt": "Large image. Image size cannot be large than .5mb",
    "componentName": "Component Name:",
    "learnMoreLink": "Learn More Link:",
    "clickToEnableLink": "Click to enable link",
    "clickToDisableLink": "Click to disable link",
    "imageUpload": "Image Upload:",
    "cancel": "Cancel",
    "save": "Save",
    "description": "Description"
  },
  "user": {
    "root": {
      "myForms": "MY FORMS",
      "history": "HISTORY",
      "user": "User"
    }
  },
  "proactiveHelpPreviewDialog": {
    "learnMore": "Learn more"
  },
  "preview": {
    "preview": "Preview",
    "previewToolTip": "This shows a preview of the form version design and behaviour as your submitters will see it. You cannot submit the form from this page."
  },
  "generalLayout": {
    "loadingText": "Loading... Please wait",
    "preview": "PREVIEW",
    "published": "PUBLISHED",
    "unpublished": "UNPUBLISHED",
    "edit": "EDIT",
    "formTitle": "Form Title",
    "actions": "Actions"
  },
  "formSubmission": {
    "editThisSubmission": "Edit This Submission",
    "submission": "Submission",
    "alertInfo": "After editing, re-submit the form to save your changes.",
    "viewAllSubmissions": "View All Submissions",
    "submitted": "Submitted:",
    "confirmationID": "Confirmation ID:",
    "submittedBy": "Submitted By:",
    "cancel": "CANCEL",
    "status": "Status",
    "updatedAt": "Modified",
    "updatedBy": "Modified By"
  },
  "teamManagement": {
    "noMatchingRecordText": "No matching records found",
    "teamManagement": "Team Management",
    "selectColumns": "Select Columns",
    "manageForm": "Manage Form",
    "search": "Search",
    "loadingText": "Loading... Please wait",
    "noDataText": "Failed to load team role data",
    "removeSelectedUsers": "Remove selected users",
    "removeThisUser": "Remove this user",
    "confirmRemoval": "Confirm Removal",
    "remove": "Remove",
    "searchTeamManagementFields": "Search team management fields",
    "save": "Save",
    "teamMebersTitle": "Search and select columns to show under your dashboard",
    "fullName": "Full Name",
    "username": "Username",
    "identityProvider": "Identity Provider",
    "delSelectedMembersWarning": "Are you sure you want to remove the selected members?",
    "delSelectedMemberWarning": "Are you sure you want to remove the selected member?",
    "idpMessage": "is already in the team.",
    "formOwnerErrMsg": "There must always be at least one form owner",
    "formOwnerConsoleErrMsg": "Cannot remove {userId} as they are the only remaining owner of this form.",
    "insufficientPermissnMsg": "Insufficient permissions to manage team",
    "getUserErrMsg": "Error getting form users: ",
    "getRolesErrMsg": "Error getting list of roles: ",
    "formOwnerRemovalWarning": "Cannot remove as they are the only remaining owner of this form.",
    "removeUsersErrMsg": "An error occurred while attempting to delete the selected users",
    "removeUserConsoleErrMsg": "Error deleting users from form {formId}: {error}",
    "updUserRolesErrMsg": "An error occurred while attempting to update all user roles",
    "updUserRolesConsoleErrMsg": "Error setting all user roles for form {formId}: {error}",
    "setUserFormsErrMsg": "An error occurred while attempting to update roles for a user",
    "setUserFormsConsoleErrMsg": "Error setting user roles for form {formId}: {error}"
  },
  "floatButton": {
    "publish": "Publish",
    "manage": "Manage",
    "redo": "Redo",
    "undo": "Undo",
    "preview": "Preview",
    "bottom": "Bottom",
    "top": "Top",
    "actions": "Actions",
    "collapse": "Collapse",
    "saved": "Saved",
    "save": "Save",
    "saving": "Saving",
    "notSaved": "Not Saved"
  },
  "formViewer": {
    "lateFormSubmissions": "The form submission period has expired! You can still create a late submission by clicking the button below.",
    "createLateSubmission": "Create late submission",
    "draftSaved": "Draft Saved",
    "saving": "Saving",
    "pleaseConfirm": "Please Confirm",
    "submitFormWarningMsg": "Are you sure you wish to submit your form?",
    "submit": "Submit",
    "wantToSaveDraft": "Do you want to save the draft?",
    "version": "Version: {version}",
    "formScheduleExpireMessage": "Form submission is not available as the scheduled submission period has expired.",
    "getUsersSubmissionsErrMsg": "An error occurred fetching the submission for this form",
    "getUsersSubmissionsConsoleErrMsg": "Error loading form submission data {submissionId}: {error}",
    "multiDraftUploadSuccess": "Your multiple draft upload has been successful!",
    "readVersionErrMsg": "No schema in response. VersionId: {versionId}",
    "readDraftErrMsg": "No schema in response. draftId: {draftId}",
    "alertRouteMsg": "The form owner has not published the form, and it is not available for submissions.",
    "fecthingFormErrMsg": "An error occurred fetching this form",
    "fecthingFormConsoleErrMsg": "Error loading form schema {versionId}: {error}",
    "savingDraftErrMsg": "An error occurred while saving a draft",
    "savingDraftConsoleErrMsg": "Error saving draft. SubmissionId: {submissionId}. Error: {error}",
    "submissionsPreviewAlert": "Submission disabled during form preview",
    "submissionsSubmitErrMsg": "Error submitting the form: {errors}",
    "sendSubmissionErrMsg": "Failed response from submission endpoint. Response code: {status}",
    "errMsg": "An error occurred submitting this form",
    "customEventAlert": "Custom button events not supported yet. Event Type: {event}",
    "formLoading": "Please wait while the form is loading !!!",
    "yes": "Yes",
    "no": "No",
    "failedResSubmissn": "Failed response from submission endpoint. Response code: {status}",
    "errSubmittingForm": "An error occurred submitting this form",
    "errorSavingFile": "Error saving files. Filename: {fileName}. Error: {error}",
    "submittingDraftErrMsg": "An error occurred while saving a draft",
    "submittingDraftConsErrMsg": "Error saving draft. SubmissionId: {submissionId}. Error: {error}",
    "formDraftAccessErrMsg": "Requested submission is already submitted, redirecting to View page"
  },
  "bCGovFooter": {
    "home": "Home",
    "about": "About gov.bc.ca",
    "disclaimer": "Disclaimer",
    "privacy": "Privacy",
    "accessibility": "Accessibility",
    "copyRight": "Copyright",
    "contactUs": "Contact Us"
  },
  "bCGovNavBar": {
    "about": "About",
    "myForms": "My Forms",
    "createNewForm": "Create a New Form",
    "help": "Help",
    "feedback": "Feedback",
    "admin": "Admin"
  },
  "homePage": {
    "title": "Create, publish forms, and receive submissions with the Common Hosted Forms Service.",
    "subTitle": "All B.C. Government employees or contractors with an IDIR account can use our hosted version of Common Hosted Forms Service (CHEFS) to create forms.",
    "takeATourOfChefs": "Take a tour of CHEFS to see it in action.",
    "logInToGetStarted": "Log in to get started",
    "loginToStart": "Log in with IDIR to get started",
    "login": "Login",
    "createFormLabel": "Create a Form",
    "manageAccessTitle": "Manage access to your form",
    "manageAccessSub1": "CHEFS allows you to create public forms, or you can manage access through IDIR or BCeID authentication.",
    "manageAccessSub2": "You can also assign roles to your team to manage all of your submissions.",
    "createCustomFormTitle": "Create custom forms with the CHEFS form builder",
    "createCustomFormSub1": "With CHEFS, you can create secure forms with an intuitive drag-and-drop interface. You can add form components, re-arrange them, and drop them into different layouts configurations.",
    "chefsHowToTitle": "CHEFS How-to Videos",
    "chefsHowToSub": "Our Quickstart Guide will introduce you to some of the basic functions of CHEFS.",
    "getStartedToChefs": "Get started using CHEFS",
    "createOnlineTitle": "Create online forms to collect information from your clients and improve your workflows.",
    "getStarted": "Get started"
  },
  "baseStepper": {
    "designForm": "Design Form",
    "setUpForm": "Set up Form",
    "manageForm": "Manage Form"
  },
  "create": {
    "formSettings": "Form Settings",
    "disclaimer": "Disclaimer",
    "disclaimerStmt": "I agree to the disclaimer and statement of responsibility for Form Designers",
    "continue": "Continue",
    "back": "Back",
    "confirmPageNav": "Do you really want to leave this page? Changes you made will not be saved.",
    "agreementErrMsg": "You must agree to the privacy disclaimer shown above."
  },
  "addTeamMember": {
    "cantFindChefsUsers": "Can't find someone? They may not have logged into CHEFS.<br /> Kindly send them a link to CHEFS and ask them to log in.",
    "cancel": "Cancel",
    "add": "Add",
    "mustSelectAUser": "You must select at least one role to add this user.",
    "addNewMember": "Add a New Member",
    "enterUsername": "Enter a name, email, or username",
    "enterExactUsername": "Enter an exact email or username",
    "BCeIDInputSearchMaxLen": "Search input for BCeID username/email must be greater than 6 characters.",
    "BCeIDMustBeExact": "Email searches for BCeID must be exact.",
    "errorGettingUsers": "Error getting users {error}"
  },
  "baseFilter": {
    "cancel": "Cancel",
    "columnName": "Column Name",
    "exampleText": "Example Text",
    "exampleText2": "Example Text 2",
    "filterPlaceholderTxt": "Filter Placeholder Text",
    "filter": "Filter",
    "value": "value",
    "resetColumns": "Reset Columns"
  },
  "formViewerActions": {
    "viewMyDraftOrSubmissions": "View My Drafts/Submissions",
    "saveAsADraft": "Save as a Draft",
    "editThisDraft": "Edit this Draft",
    "switchSingleSubmssn": "Switch to single submission",
    "switchMultiSubmssn": "Switch to multiple submissions"
  },
  "baseCopyToClipboard": {
    "linkToClipboard": "Link copied to clipboard",
    "copyToClipboard": "Copy to Clipboard",
    "errCopyToClipboard": "Error attempting to copy to clipboard."
  },
  "sucess": {
    "sucessFormSubmissn": "Your form has been submitted successfully",
    "keepRecord": "If you wish to keep a record of this submission, you can keep the following",
    "confirmationId": "Confirmation ID"
  },
  "bcGovAlertBanner": {
    "defaultErrMsg": "Error: Something went wrong",
    "error": "error"
  },
  "store": {
    "admin": {
      "addFormOwnerRole": "Added the Owner role for this form to {fullName}",
      "addRowError": "An error occurred while adding the role.",
      "addRowConsoleErr": "Error adding user {userId} to form {formId}: {error}",
      "apiKeyDelMsg": "The API Key for this form has been deleted.",
      "errDeletingApiKey": "An error occurred while trying to delete the API Key.",
      "consErrDeletingApiKey": "Error deleting API Key for form {formId}: {error}",
      "fecthingFormsErrMsg": "An error occurred while fetching forms.",
      "fecthingFormsConsErrMsg": "Error getting admin form data: {error}",
      "fecthingFormErrMsg": "An error occurred while fetching this form.",
      "fecthingFormConsErrMsg": "Error getting admin form {formId} data: {error}",
      "fecthFormUserRolesErrMsg": "An error occurred while fetching form user roles.",
      "fecthFormUserRolesConsErrMsg": "Error getting admin roles data: {error}",
      "fecthApiDetailsErrMsg": "An error occurred while fetching this form's API details.",
      "fecthApiDetailsConsErrMsg": "Error getting admin API details from form {formId} data: {error}",
      "restoreFormErrMsg": "An error occurred while restoring this form.",
      "restoreFormConsErrMsg": "Error restoring form {formId} data: {error}",
      "getUsersErrMsg": "An error occurred while fetching users.",
      "getUsersConsErrMsg": "Error getting admin users data: {error}",
      "getUserErrMsg": "An error occurred while fetching this user.",
      "getUserConsErrMsg": "Error getting admin user {userId} data: {error}",
      "storingFCHelpInfoErrMsg": "An error occurred while storing form component help information",
      "storingFCHelpInfoConsErrMsg": "Error getting storing form component help information: {error}",
      "gettingFCImgUrlErrMsg": "An error occurred while getting image url",
      "gettingFCImgUrlConsErrMsg": "Error getting image url: {error}",
      "updatingFCStatusErrMsg": "An error occurred while updating publish status",
      "updatingFCStatusConsErrMsg": "Error updating publish status: {error}",
      "fecthingFormBuilderCompsErrMsg": "An error occurred while fetching form builder components",
      "fecthingFormBuilderCompsConsErrMsg": "Error getting form builder components: {error}"
    },
    "form": {
      "fetchEmailTemplatesConsErrMsg": "Error loading email templates for {formId}: {error}",
      "fetchEmailTemplatesErrMsg": "An error occurred fetching the email templates for this form",
      "getCurrUserFormsErrMsg": "An error occurred while fetching your forms.",
      "getCurrUserFormsConsErrMsg": "Error getting user data: {error}",
      "getUserFormPermErrMsg": "An error occurred while fetching your user data for this form.",
      "getUserFormPermConsErrMsg": "Error getting user data using formID {formId}: {error}",
      "getUserFormRolesErrmsg": "An error occurred while fetching your user data for this form.",
      "getUserFormRolesConsErrmsg": "Error getting user data using formID {formId}: {error}",
      "updCurrUserFormPrefErrMsg": "An error occurred while saving your preferences for this form.",
      "updCurrUserFormPrefConsErrMsg": "Error updating user form prefs using formID {formId}, and prefs {preferences}: {error}",
      "getCurrUserFormPrefErrMsg": "An error occurred while fetching your preferences for this form.",
      "getCurrUserFormPrefConsErrMsg": "Error getting user form prefs using formID {formId}: {error}",
      "delCurrformNotiMsg": "Form {name} has been deleted successfully.",
      "delCurrFormConsErMsg": "Error deleting form {id}: {error}",
      "delDraftErrMsg": "An error occurred while deleting this draft.",
      "delDraftConsErrMsg": "Error deleting {draftId}: {error}",
      "fecthDraftErrMsg": "An error occurred while scanning for drafts for this form.",
      "fecthDraftConsErrMsg": "Error getting drafts for form {formId}: {error}",
      "fecthFormErrMsg": "An error occurred while fetching this form.",
      "fecthFormConsErrMsg": "Error getting form {formId}: {error}",
      "fetchFormFieldsErrMsg": "An error occurred while fetching the list of fields for this form.",
      "fetchFormFieldsConsErrMsg": "Error getting form {formId}: {error}",
      "publishDraftErrMsg": "An error occurred while publishing.",
      "publishDraftConsErrMsg": "Error publishing {draftId}: {error}",
      "toggleVersnPublConsErrMsg": "Error in toggleVersionPublish {versionId} {publish}: {error}",
      "updateEmailTemplateConsErrMsg": "Error updating email templates for form {formId}: {error}",
      "updateEmailTemplateErrMsg": "An error occurred while updating the email templates for this form.",
      "updateFormErrMsg": "An error occurred while updating the settings for this form.",
      "updateFormConsErrMsg": "Error updating form {id}: {error}",
      "deleteSubmissionNotifyMsg": "Submission deleted successfully.",
      "deleteSubmissionErrMsg": "An error occurred while deleting this submission.",
      "deleteSubmissionConsErrMsg": "Error deleting submission {submissionId}: {error}",
      "deleteSubmissionsNotifyMsg": "Submissions deleted successfully.",
      "deleteSubmissionsErrMsg": "An error occurred while deleting the selected submissions.",
      "deleteSubmissionsConsErrMsg": "Error deleting submissions: {error}",
      "restoreSubmissionsNotiMsg": "Submissions restored successfully.",
      "restoreSubmissionsErrMsg": "An error occurred while restoring this submission.",
      "restoreSubmissionsConsErrMsg": "Error restoring submissions: {error}",
      "restoreSubmissionNotiMsg": "Submission restored successfully.",
      "restoreSubmissionErrMsg": "An error occurred while restoring this submission.",
      "restoreSubmissionConsErrMsg": "Error restoring submission {submissionId}: {error}",
      "fecthSubmissnUsersErrMsg": "An error occurred while fetching the recipient email for this submission.",
      "fecthSubmissnUsersConsErrMsg": "Error getting recipient email for submission {formSubmissionId}: {error}",
      "fetchSubmissnErrMsg": "An error occurred while fetching this submission.",
      "fetchSubmissnConsErrMsg": "Error getting submission {submissionId}: {error}",
      "fetchFormCSVExptFieldsErrMsg": "An error occurred while fetching the list of fields for this form.",
      "fetchFormCSVExptFieldsConsErrMsg": "Error getting form {formId}: {error}",
      "fetchSubmissnsErrMsg": "An error occurred while fetching submissions for this form.",
      "fetchSubmissnsConsErrMsg": "Error getting submissions for {formId}: {error}",
      "fetchVersionErrMsg": "An error occurred while fetching this form.",
      "fetchVersionConsErrMsg": "Error getting version {versionId} for form {formId}: {error}",
      "deleteApiKeyNotifyMsg": "The API Key for this form has been deleted.",
      "deleteApiKeyErrMsg": "An error occurred while trying to delete the API Key.",
      "deleteApiKeyConsErrMsg": "Error deleting API Key for form {formId}: {error}",
      "generateApiKeyNotifyMsg": "An API Key for this form has been created.",
      "generateApiKeyErrMsg": "An error occurred while trying to generate an API Key.",
      "generateApiKeyConsErrMsg": "Error generating API Key for form {formId}: {error}",
      "readApiKeyErrMsg": "An error occurred while trying to fetch the API Key.",
      "readApiKeyConsErrMsg": "Error getting API Key for form {formId}: {error}.",
      "getFCPHImageUrlErrMsg": "An error occurred while getting image url",
      "getFCPHImageUrlConsErrMsg": "Error getting image url: {error}",
      "listFCPHErrMsg": "An error occurred while fetching form builder components",
      "listFCPHConsErrMsg": "Error getting form builder components: {error}",
      "downloadFileErrMsg": "An error occurred while downloading file",
      "downloadFileConsErrMsg": "Error downloading file: error",
      "readSubscriptionSettingsErrMsg": "An error occurred while trying to fetch the subscription settings.",
      "readSubscriptionSettingsConsErrMsg": "Error getting subscription settings for form {formId}: {error}.",
      "saveSubscriptionSettingsNotifyMsg": "Subscription settings for this form has been saved.",
      "saveSubscriptionSettingsErrMsg": "An error occurred while trying to save subscription settings.",
      "saveSubscriptionSettingsConsErrMsg": "Error saving subscription settings for form {formId}: {error}"
    }
  },
  "permissionUtils": {
    "formNotAvailable": "The form is currently unavailable. This may be due to an incorrect link, or the form may have been deleted by its owner.",
    "missingFormIdAndSubmssId": "Options missing both formId and submissionId",
    "loadingFormErrMsg": "An error occurred while loading this form.",
    "loadingForm": "Error while loading {options}: {error}",
    "idpHintMsg": "This form requires {idpHint} authentication. Please re-login and try again.",
    "formIdpMissMatch": "Form IDP mismatch. Form requires {idpHint} but user has {userIdp}."
  },
  "download": {
    "chefsDataExport": "CHEFS Data Export",
    "preparingForDownloading": "Preparing for download...",
    "downloadInfoA": "If your file does not automatically download",
    "downloadInfoB": "click here to try again"
  },
  "history": {
    "submissnHistory": "Your Submission History (TBD)"
  },
  "error": {
    "logout": "Logout",
    "somethingWentWrong": "Error: Something went wrong... :("
  },
  "login": {
    "authenticateWith": "Authenticate with:",
    "alreadyLoggedIn": "Already logged in",
    "home": "Home",
    "about": "About"
  },
  "notFound": {
    "about": "About",
    "pageNotFound": "404: Page not found. :("
  },
  "admin": {
    "root": {
      "admin": "Admin"
    },
    "form": {
      "administerForm": "Administer Form"
    },
    "user": {
      "administerUser": "Administer User"
    }
  },
  "user": {
    "root": {
      "myForms": "MY FORMS",
      "history": "HISTORY",
      "user": "User"
    }
  },
  "test": {
    "customError": "This is a custom error message for testing."
  }
}
