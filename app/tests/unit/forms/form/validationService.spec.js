const validationService = require('../../../../src/forms/form/validationService');

describe('validate', () => {
  const formSchema = {
    type: 'form',
    display: 'form',
    components: [
      {
        id: 'evjiupf',
        key: 'fullname',
        case: '',
        mask: false,
        type: 'simpletextfield',
        input: true,
        label: 'Full name ',
        addons: [],
        hidden: false,
        prefix: '',
        suffix: '',
        unique: false,
        widget: {
          type: 'input',
        },
        dbIndex: false,
        overlay: {
          top: '',
          left: '',
          style: '',
          width: '',
          height: '',
        },
        tooltip: '',
        disabled: false,
        multiple: false,
        redrawOn: '',
        tabindex: '',
        validate: {
          custom: '',
          unique: false,
          pattern: '',
          multiple: false,
          required: true,
          maxLength: '',
          minLength: '',
          isUseForCopy: false,
          customMessage: '',
          customPrivate: false,
          strictDateValidation: false,
        },
        autofocus: false,
        encrypted: false,
        hideLabel: false,
        inputMask: '',
        inputType: 'text',
        modalEdit: false,
        protected: false,
        refreshOn: '',
        tableView: false,
        attributes: {},
        errorLabel: '',
        persistent: true,
        properties: {},
        spellcheck: true,
        validateOn: 'change',
        clearOnHide: true,
        conditional: {
          eq: '',
          json: '',
          show: null,
          when: null,
        },
        customClass: '',
        description: '',
        displayMask: '',
        inputFormat: 'plain',
        placeholder: '',
        defaultValue: '',
        dataGridLabel: false,
        labelPosition: 'top',
        showCharCount: false,
        showWordCount: false,
        calculateValue: '',
        calculateServer: false,
        customConditional: '',
        allowMultipleMasks: false,
        customDefaultValue: '',
        allowCalculateOverride: false,
        truncateMultipleSpaces: false,
      },
      {
        id: 'e7uyy6',
        key: 'gender',
        data: {
          url: '',
          json: '',
          custom: '',
          values: [
            {
              label: 'Male',
              value: 'M',
            },
            {
              label: 'Female',
              value: 'F',
            },
            {
              label: '',
              value: '',
            },
          ],
          resource: '',
        },
        type: 'simpleselect',
        input: true,
        label: 'gender',
        limit: 100,
        addons: [],
        filter: '',
        hidden: false,
        idPath: 'id',
        prefix: '',
        suffix: '',
        unique: false,
        widget: 'choicesjs',
        dataSrc: 'values',
        dbIndex: false,
        overlay: {
          top: '',
          left: '',
          style: '',
          width: '',
          height: '',
        },
        tooltip: '',
        dataType: 'auto',
        disabled: false,
        lazyLoad: true,
        multiple: false,
        redrawOn: '',
        tabindex: '',
        template: '<span>{{ item.label }}</span>',
        validate: {
          custom: '',
          unique: false,
          multiple: false,
          required: false,
          isUseForCopy: false,
          customMessage: '',
          customPrivate: false,
          onlyAvailableItems: false,
          strictDateValidation: false,
        },
        autofocus: false,
        encrypted: false,
        hideLabel: false,
        indexeddb: {
          filter: {},
        },
        minSearch: 0,
        modalEdit: false,
        protected: false,
        refreshOn: '',
        tableView: true,
        attributes: {},
        errorLabel: '',
        persistent: true,
        properties: {},
        validateOn: 'change',
        clearOnHide: true,
        conditional: {
          eq: '',
          json: '',
          show: null,
          when: null,
        },
        customClass: '',
        description: '',
        fuseOptions: {
          include: 'score',
          threshold: 0.3,
        },
        ignoreCache: false,
        placeholder: '',
        searchField: '',
        authenticate: false,
        defaultValue: '',
        selectFields: '',
        customOptions: {},
        dataGridLabel: false,
        labelPosition: 'top',
        readOnlyValue: false,
        searchEnabled: true,
        showCharCount: false,
        showWordCount: false,
        uniqueOptions: false,
        valueProperty: '',
        calculateValue: '',
        clearOnRefresh: false,
        searchDebounce: 0.3,
        useExactSearch: false,
        calculateServer: false,
        searchThreshold: 0.3,
        selectThreshold: 0.3,
        customConditional: '',
        allowMultipleMasks: false,
        customDefaultValue: '',
        allowCalculateOverride: false,
      },
      {
        id: 'e1omjlp',
        key: 'adresses',
        tags: [],
        tree: true,
        type: 'datagrid',
        input: true,
        label: 'adresses',
        logic: [],
        addons: [],
        errors: '',
        hidden: false,
        prefix: '',
        suffix: '',
        unique: false,
        widget: null,
        dbIndex: false,
        overlay: {
          top: '',
          left: '',
          page: '',
          style: '',
          width: '',
          height: '',
        },
        reorder: false,
        tooltip: '',
        disabled: false,
        lazyLoad: false,
        multiple: false,
        redrawOn: '',
        tabindex: '',
        validate: {
          json: '',
          custom: '',
          unique: false,
          multiple: false,
          required: false,
          maxLength: '',
          minLength: '',
          customMessage: '',
          customPrivate: false,
          strictDateValidation: false,
        },
        autofocus: false,
        encrypted: false,
        hideLabel: false,
        initEmpty: false,
        modalEdit: false,
        protected: false,
        refreshOn: '',
        tableView: false,
        addAnother: '',
        attributes: {},
        components: [
          {
            id: 'e51pyp600000000000',
            key: 'street',
            case: '',
            mask: false,
            type: 'simpletextfield',
            input: true,
            label: 'street',
            addons: [],
            hidden: false,
            prefix: '',
            suffix: '',
            unique: false,
            widget: {
              type: 'input',
            },
            dbIndex: false,
            overlay: {
              top: '',
              left: '',
              style: '',
              width: '',
              height: '',
            },
            tooltip: '',
            disabled: false,
            multiple: false,
            redrawOn: '',
            tabindex: '',
            validate: {
              custom: '',
              unique: false,
              pattern: '',
              multiple: false,
              required: false,
              maxLength: '',
              minLength: '',
              isUseForCopy: false,
              customMessage: '',
              customPrivate: false,
              strictDateValidation: false,
            },
            autofocus: false,
            encrypted: false,
            hideLabel: false,
            inputMask: '',
            inputType: 'text',
            modalEdit: false,
            protected: false,
            refreshOn: '',
            tableView: false,
            attributes: {},
            errorLabel: '',
            persistent: true,
            properties: {},
            spellcheck: true,
            validateOn: 'change',
            clearOnHide: true,
            conditional: {
              eq: '',
              json: '',
              show: null,
              when: null,
            },
            customClass: '',
            description: '',
            displayMask: '',
            inputFormat: 'plain',
            placeholder: '',
            defaultValue: '',
            dataGridLabel: false,
            labelPosition: 'top',
            showCharCount: false,
            showWordCount: false,
            calculateValue: '',
            calculateServer: false,
            customConditional: '',
            allowMultipleMasks: false,
            customDefaultValue: '',
            allowCalculateOverride: false,
            truncateMultipleSpaces: false,
          },
          {
            id: 'emkzz5r000000000',
            key: 'city',
            case: '',
            mask: false,
            type: 'simpletextfield',
            input: true,
            label: 'city',
            addons: [],
            hidden: false,
            prefix: '',
            suffix: '',
            unique: false,
            widget: {
              type: 'input',
            },
            dbIndex: false,
            overlay: {
              top: '',
              left: '',
              style: '',
              width: '',
              height: '',
            },
            tooltip: '',
            disabled: false,
            multiple: false,
            redrawOn: '',
            tabindex: '',
            validate: {
              custom: '',
              unique: false,
              pattern: '',
              multiple: false,
              required: false,
              maxLength: '',
              minLength: '',
              isUseForCopy: false,
              customMessage: '',
              customPrivate: false,
              strictDateValidation: false,
            },
            autofocus: false,
            encrypted: false,
            hideLabel: false,
            inputMask: '',
            inputType: 'text',
            modalEdit: false,
            protected: false,
            refreshOn: '',
            tableView: false,
            attributes: {},
            errorLabel: '',
            persistent: true,
            properties: {},
            spellcheck: true,
            validateOn: 'change',
            clearOnHide: true,
            conditional: {
              eq: '',
              json: '',
              show: null,
              when: null,
            },
            customClass: '',
            description: '',
            displayMask: '',
            inputFormat: 'plain',
            placeholder: '',
            defaultValue: '',
            dataGridLabel: false,
            labelPosition: 'top',
            showCharCount: false,
            showWordCount: false,
            calculateValue: '',
            calculateServer: false,
            customConditional: '',
            allowMultipleMasks: false,
            customDefaultValue: '',
            allowCalculateOverride: false,
            truncateMultipleSpaces: false,
          },
          {
            id: 'en45ail0000000',
            key: 'state',
            case: '',
            mask: false,
            type: 'simpletextfield',
            input: true,
            label: 'state',
            addons: [],
            hidden: false,
            prefix: '',
            suffix: '',
            unique: false,
            widget: {
              type: 'input',
            },
            dbIndex: false,
            overlay: {
              top: '',
              left: '',
              style: '',
              width: '',
              height: '',
            },
            tooltip: '',
            disabled: false,
            multiple: false,
            redrawOn: '',
            tabindex: '',
            validate: {
              custom: '',
              unique: false,
              pattern: '',
              multiple: false,
              required: false,
              maxLength: '',
              minLength: '',
              isUseForCopy: false,
              customMessage: '',
              customPrivate: false,
              strictDateValidation: false,
            },
            autofocus: false,
            encrypted: false,
            hideLabel: false,
            inputMask: '',
            inputType: 'text',
            modalEdit: false,
            protected: false,
            refreshOn: '',
            tableView: false,
            attributes: {},
            errorLabel: '',
            persistent: true,
            properties: {},
            spellcheck: true,
            validateOn: 'change',
            clearOnHide: true,
            conditional: {
              eq: '',
              json: '',
              show: null,
              when: null,
            },
            customClass: '',
            description: '',
            displayMask: '',
            inputFormat: 'plain',
            placeholder: '',
            defaultValue: '',
            dataGridLabel: false,
            labelPosition: 'top',
            showCharCount: false,
            showWordCount: false,
            calculateValue: '',
            calculateServer: false,
            customConditional: '',
            allowMultipleMasks: false,
            customDefaultValue: '',
            allowCalculateOverride: false,
            truncateMultipleSpaces: false,
          },
        ],
        errorLabel: '',
        persistent: true,
        properties: {},
        validateOn: 'change',
        clearOnHide: true,
        conditional: {
          eq: '',
          json: '',
          show: null,
          when: null,
        },
        customClass: '',
        description: '',
        layoutFixed: false,
        placeholder: '',
        defaultValue: [{}],
        dataGridLabel: false,
        labelPosition: 'top',
        showCharCount: false,
        showWordCount: false,
        calculateValue: '',
        calculateServer: false,
        enableRowGroups: false,
        customConditional: '',
        addAnotherPosition: 'bottom',
        allowMultipleMasks: false,
        customDefaultValue: '',
        conditionalAddButton: '',
        allowCalculateOverride: false,
        disableAddingRemovingRows: false,
      },
      {
        id: 'e6uwf9e',
        key: 'submit',
        size: 'md',
        type: 'button',
        block: false,
        input: true,
        label: 'Submit',
        theme: 'primary',
        action: 'submit',
        addons: [],
        hidden: false,
        prefix: '',
        suffix: '',
        unique: false,
        widget: {
          type: 'input',
        },
        dbIndex: false,
        overlay: {
          top: '',
          left: '',
          style: '',
          width: '',
          height: '',
        },
        tooltip: '',
        disabled: false,
        leftIcon: '',
        multiple: false,
        redrawOn: '',
        tabindex: '',
        validate: {
          custom: '',
          unique: false,
          multiple: false,
          required: false,
          customPrivate: false,
          strictDateValidation: false,
        },
        autofocus: false,
        encrypted: false,
        hideLabel: false,
        modalEdit: false,
        protected: false,
        refreshOn: '',
        rightIcon: '',
        tableView: false,
        attributes: {},
        errorLabel: '',
        persistent: false,
        properties: {},
        validateOn: 'change',
        clearOnHide: true,
        conditional: {
          eq: '',
          show: null,
          when: null,
        },
        customClass: '',
        description: '',
        placeholder: '',
        defaultValue: null,
        dataGridLabel: true,
        labelPosition: 'top',
        showCharCount: false,
        showWordCount: false,
        calculateValue: '',
        calculateServer: false,
        disableOnInvalid: true,
        allowMultipleMasks: false,
        customDefaultValue: '',
        allowCalculateOverride: false,
      },
    ],
  };

  const validationErrorObject = {
    name: 'ValidationError',
  };

  it('should validate fields values according to validation rules and returns object contains all the errors as there is a validation problem in payload', async () => {
    const submissionData = {
      fullname: '',
      gender: 'M',
      adresses: [
        {
          street: '33',
          city: 'Toronto',
          state: 'ON',
        },
      ],
    };

    const result = await validationService.validate(submissionData, formSchema);

    expect(result).toBeTruthy();

    expect(typeof result).toBe('object');

    expect(result).toMatchObject(validationErrorObject);
  });

  it('should validate fields values according to validation rules and returns null as there is no validation problem in payload', async () => {
    const submissionData = {
      fullname: 'John Smith',
      gender: 'M',
      adresses: [
        {
          street: '33',
          city: 'Toronto',
          state: 'ON',
        },
      ],
    };

    const result = await validationService.validate(submissionData, formSchema);

    expect(result).toBeNull();
  });

  it('should validate fields values according to validation rules and returns object as there is no data in payload', async () => {
    const submissionData = {};

    const result = await validationService.validate(submissionData, formSchema);

    expect(result).toBeTruthy();

    expect(typeof result).toBe('object');

    expect(result).toMatchObject(validationErrorObject);
  });
});
